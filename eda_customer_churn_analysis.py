# -*- coding: utf-8 -*-
"""EDA customer churn analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aBDwDNMZ3POof0kQNgZlRY-qg5I864H7
"""

!pip install pandas numpy matplotlib seaborn

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
import seaborn as sns

from google.colab import files
upload=files.upload()

import pandas as pd
df = pd.read_csv("WA_Fn-UseC_Customer-Churn.csv")

df.head()

df.info()

df["TotalCharges"]=df["TotalCharges"].replace(" ",0)
df["MonthlyCharges"]=df["MonthlyCharges"].replace(" ", 0)

df["MonthlyCharges"]=df["MonthlyCharges"].astype(float)
df["TotalCharges"]=df["TotalCharges"].astype(float)

df.info()

df["SeniorCitizen"]=df["SeniorCitizen"].replace({0:"No", 1: "Yes"})
df["SeniorCitizen"]=df["SeniorCitizen"].astype("string")

df.info()

plt.figure(figsize=(3,4))
ax = sns.countplot(x="Churn", data=df)
ax.bar_label(ax.containers [0])
plt.title("Churn count")
plt.show()

# Count churn values
churn_counts = df["Churn"].value_counts()

# Plot pie chart
plt.figure(figsize=(4,4))
plt.pie(churn_counts, labels=churn_counts.index, autopct="%1.1f%%", startangle=90)
plt.title("Churn Distribution")
plt.show()

plt.figure(figsize=(4,4))
plt.title("churn distribution by gender")
ax = sns.countplot(x="gender", hue="Churn", data=df)
plt.show()

plt.figure(figsize=(4,4))
ax=sns.countplot(x="SeniorCitizen", data=df, hue="Churn")
ax.bar_label(ax.containers [0])
ax.bar_label(ax.containers [1])
plt.title("Churn by SeniorCitizen")
plt.show()

"""Churn is higher among senior citizens compared to non-senior customers, though the senior group is much smaller in size.
Among non-seniors, churn counts are noticeable but retention remains strong.
"""

#Crosstab counts
count = pd.crosstab(df["SeniorCitizen"], df["Churn"])

#Row % (make percentages)
percentage = count.div(count.sum(axis=1), axis=0) * 100

#Plot stacked bar with labels
ax = percentage.plot(kind="bar", stacked=True, figsize=(4,4))

# Add % labels inside each stacked section
for container in ax.containers:
    ax.bar_label(container, fmt="%.1f%%", label_type="center")

plt.title("Churn by SeniorCitizen (%)")
plt.ylabel("Percentage")
plt.show()

"""Churn is significantly higher among senior citizens, with about 42% of them leaving the service compared to only 24% for non-seniors.
Non-senior customers are more loyal, with 76% retention, while seniors show lower retention at 58%.
"""

plt.figure(figsize=(9,5))
sns.histplot(x="tenure", data=df, hue="Churn", bins=50, stat="percent")
plt.title("Churn by Tenure (%)")
plt.ylabel("Percentage")
plt.show()

"""Churn is highest among new customers with very low tenure (0–6 months), showing early-stage attrition is a major risk."""

plt.figure(figsize=(4,4))
plt.title("churn distribution by contract")
ax = sns.countplot(x="Contract", hue="Churn", data=df)
ax.bar_label(ax.containers [0])
ax.bar_label(ax.containers [1])
plt.show()

"""Customers on month-to-month contracts show the highest churn, with churn counts nearly matching non-churn counts.
In contrast, churn is much lower for one-year contracts and extremely low for two-year contracts.
"""

#Crosstab counts
count = pd.crosstab(df["Contract"], df["Churn"])

#Row % (make percentages)
percentage = count.div(count.sum(axis=1), axis=0) * 100

#Plot stacked bar with labels
ax = percentage.plot(kind="bar", stacked=True, figsize=(4,4))

# Add % labels inside each stacked section
for container in ax.containers:
    ax.bar_label(container, fmt="%.1f%%", label_type="center")

plt.title("Churn by contract (%)")
plt.ylabel("Percentage")
plt.show()

"""Customers on month-to-month contracts have the highest churn rate at about 43%, showing they are the most likely to leave.
Churn drops significantly for one-year contracts, with only ~11% of customers churning.
The lowest churn is seen in two-year contracts, with just ~3% churn, indicating long-term commitments reduce attrition risk.
"""

df.columns.values

# Columns to plot
cols = ['PhoneService', 'MultipleLines', 'InternetService',
        'OnlineSecurity', 'OnlineBackup', 'DeviceProtection',
        'TechSupport', 'StreamingTV', 'StreamingMovies']

# Create subplots grid (3 rows × 3 cols)
fig, axes = plt.subplots(3, 3, figsize=(12, 10))

# Flatten axes for easy iteration
axes = axes.flatten()

# Loop through each column and make a countplot
for i, col in enumerate(cols):
    sns.countplot(x=col, hue="Churn", data=df, ax=axes[i])
    axes[i].set_title(f"Churn by {col}")
    axes[i].tick_params(axis='x', rotation=360)  # rotate labels if needed

# Adjust layout
plt.tight_layout()
plt.show()

"""Customers without additional services like OnlineSecurity, TechSupport, and DeviceProtection show significantly higher churn rates.
Fiber optic internet users also exhibit higher churn compared to DSL users.
"""

plt.figure(figsize=(4,4))
plt.title("churn distribution by payment method")
ax = sns.countplot(x="PaymentMethod", hue="Churn", data=df)
ax.bar_label(ax.containers [0])
ax.bar_label(ax.containers [1])
plt.xticks(rotation=60)
plt.show()

"""Electronic Check has the highest churned."""